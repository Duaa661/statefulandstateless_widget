import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key?key}):super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // TRY THIS: Try running your application with "flutter run". You'll see
        // the application has a purple toolbar. Then, without quitting the app,
        // try changing the seedColor in the colorScheme below to Colors.green
        // and then invoke "hot reload" (save your changes or press the "hot
        // reload" button in a Flutter-supported IDE, or press "r" if you used
        // the command line to start the app).
        //
        // Notice that the counter didn't reset back to zero; the application
        // state is not lost during the reload. To reset the state, use ho
// restart instead.
        //
        // This works for code too, not just values: Most code changes can be
        // tested with just a hot reload.
      primarySwatch: Colors.blue,
      ),
      home:MyHomePage(),
    );
  }
}
class MyHomePage extends StatefulWidget {

  @override
  State<StatefulWidget> createState() => _MyHomePageState();
}

  class _MyHomePageState extends State<MyHomePage>{
  var count=0;
    @override
  Widget build(BuildContext context){
  return Scaffold(
    appBar: AppBar(
      title: Text('Satateful',style: TextStyle(fontSize: 56),),
    ),
    body: Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Text('Count : $count',style:TextStyle(fontSize: 56),),
          ElevatedButton(onPressed: (){
            setState(() {
              count++;
              print(count);
            });
          }, child: Text('Increment count',style: TextStyle(fontSize: 36),))

        ],
      ),
    ),
  );
  }


}
